% Numerical Mathematics and Computing, Fifth Edition
% Ward Cheney & David Kincaid
% Brooks/Cole Publ. Co.
% (c) 2003
%
% file:  rkf_ode45.m
%
% Matlab routine for Runge-Kutta-Fehlberg is called
% 'ode45'. Here we use this routine to solve the
% ODE over the interval [0,1] after setting the initial
% condition s and the error tolerance.
% The ODE is defined in the M-file 'ode45file1'.
close all
t = 0; x = 8; % Initial Conditions
errr = 1e-4; % Tolerance 
tb = 1506.5; % Time limit
N = 1000;
tspan = linspace(t,tb,N);
options = odeset('RelTol',errr,'AbsTol',errr); % Set error criteria
[t,x] = ode45('ode45file3', [t tb], x, options); % Solve ODE 
plot(t,(x),'LineWidth',1.4,'Color','black')
hold on
set(gcf,'Color','white'); % Set background color to white
set (gca,'FontName','times new roman')
title('$y^{\prime}(t) = .6\pi r^2 \sqrt{2g}\frac{\sqrt{y}}{A(y)}, y(0) = 8$',...
    'HorizontalAlignment','center',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Interpreter','latex');
grid on
% Create ylabel
ylabel('$y(t)$ (ft)',...
    'HorizontalAlignment','center',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Interpreter','latex');

% Create xlabel
xlabel('$t$ (seconds)',...
    'HorizontalAlignment','center',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Interpreter','latex');
t_min = t(find(x == min(x)));
plot(t_min,x(find(x == min(x))),'d',...
    'LineWidth',2,...
    'MarkerEdgeColor','none',...
    'MarkerFaceColor',[1 0.5 1],...
    'MarkerSize',5);
legend('',['Tank is emptied after t = ', num2str(t_min), 'seconds'],'Location','Northwest')
matlab2tikz('filename',sprintf('math609_pa5_comp_example_3_%d.tex', errr*1e4))